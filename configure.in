#######################################################################
#	Thus it begins...
#######################################################################

AC_INIT(roundhouse, 0.7, [Anthony Howe <achowe@snert.com>])

dnl The autoconf version I learned to deal with.
AC_PREREQ(2.57)

dnl Yes I wrote this mess.
SNERT_INIT([],[Copyright 2005, 2022 by Anthony Howe. All rights reserved.], [BUILD_ID.TXT])
AC_DEFINE_UNQUOTED(_PLATFORM, [["${platform}"]])

AC_SUBST(rel_incdir, '../../include')
AC_SUBST(rel_libdir, '../../lib')
AC_SUBST(rel_tardir, '../../../..')

#######################################################################
#	Setup paths
#######################################################################

# The total perspective vortex "You are here..."
AC_CONFIG_SRCDIR($PACKAGE_TARNAME.c)

#######################################################################
#	Auxliary files to be modified later
#######################################################################

AC_CONFIG_FILES(makefile)
AC_CONFIG_HEADERS(config.h)
AC_CONFIG_FILES(config.h.in)
AC_CONFIG_FILES(install.sh)
AC_CONFIG_FILES(doc/manual.shtml:manual.shtml.in)
AC_CONFIG_FILES(examples/startup.sh:startup.sh.in)

#######################################################################
#	Configuration options: settings
#######################################################################

SNERT_OPTION_ENABLE_DEBUG
SNERT_OPTION_ENABLE_RUN_USER(root)
SNERT_OPTION_ENABLE_RUN_GROUP(daemon)

#######################################################################
#	Configuration options: packages
#######################################################################

#######################################################################
#	Load LibSnert Configuration
#######################################################################

if test -f '../lib/version.sh' ; then
	snert_libsnert=yes
	. '../lib/version.sh'

	SNERT_TAR_SETTINGS

	AC_SUBST(LIBSNERT_MAJOR)
	AC_SUBST(LIBSNERT_MINOR)
	AC_SUBST(LIBSNERT_BUILD)
	AC_SUBST(LIBSNERT_NAME)
	AC_SUBST(LIBSNERT_VERSION)
	AC_SUBST(LIBSNERT_STRING)
	AC_SUBST(LIBSNERT_AUTHOR)
	AC_SUBST(LIBSNERT_COPYRIGHT)
	AC_SUBST(LIBSNERT_UNAME)

	AC_SUBST(CC)
	AC_SUBST(CC_O)
	AC_SUBST(CC_E)
	AC_SUBST(CFLAGS)
	AC_SUBST(LDFLAGS)
	AC_SUBST(ARCHIVE)
	AC_SUBST(COMPILE)
	AC_SUBST(RANLIB)
	AC_SUBST(LIBEXT)
	AC_SUBST(OBJEXT)
	AC_SUBST(EXEEXT)
	AC_SUBST(AUTOCONF)
	AC_SUBST(MD5SUM)
	AC_SUBST(TAR_I)

	AC_SUBST(ENABLE_MINGW)

	AC_SUBST(HAVE_LIB_RT)
	AC_SUBST(HAVE_LIB_PTHREAD)
	AC_SUBST(HAVE_LIB_WS2_32)
	AC_SUBST(HAVE_LIB_IPHLPAPI)

	AC_SUBST(CFLAGS_SSL)
	AC_SUBST(LDFLAGS_SSL)
	AC_SUBST(LIBS_SSL)

	expr "${CFLAGS}" : '.*-pthread' >/dev/null ;
	has_freebsd_pthread=$?
	if test "${HAVE_LIB_PTHREAD:-no}" = 'no' -a "${CFLAGS_PTHREAD:-no}" = 'no' -a "${ENABLE_MINGW:-no}" = 'no'; then
		echo
		echo '***************************************************************'
		echo "***     This application requires POSIX thread support.     ***"
		echo '***************************************************************'
		echo
		exit 1
	fi

	CFLAGS="${CFLAGS_PTHREAD} ${CFLAGS}"
	LDFLAGS="${LDFLAGS_PTHREAD} ${LDFLAGS}"
	LIBS="${LIBS} ${NETWORK_LIBS} ${HAVE_LIB_PTHREAD} ${HAVE_LIB_WS2_32} ${HAVE_LIB_IPHLPAPI}"
else
	snert_libsnert=no
	echo
	echo '***************************************************************'
	echo 'Oi! You must download, configure, and build LibSnert first!'
	echo '***************************************************************'
	echo
fi

#######################################################################
#	Generate output.
#######################################################################

echo
echo "Generating files..."
echo
SNERT_FINI
AC_OUTPUT()

echo
echo $PACKAGE_NAME/$package_major.$package_minor.$package_build
echo $package_copyright
echo
AC_MSG_RESULT([  Platform..........: $platform])
AC_MSG_RESULT([  prefix............: $prefix])
AC_MSG_RESULT([  exec_prefix.......: $exec_prefix])
AC_MSG_RESULT([  sbindir...........: $sbindir])
AC_MSG_RESULT([  CFLAGS............: $CFLAGS $CFLAGS_SSL])
AC_MSG_RESULT([  LDFLAGS...........: $LDFLAGS $LDFLAGS_SSL])
AC_MSG_RESULT([  LIBS..............: $LIBS $LIBS_SSL])
echo
